{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/Desktop/GeneralAssembly/Post-Graduation-Projects/react-software-architecture-course/src/pages/CounterButton.js\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CounterButton = () => {\n  _s();\n  const [numberOfClick, setNumberofClicks] = useState(0);\n  const [incrementBy, setIncrementBy] = useState(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter-button-contianer\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You have clicked the button \", numberOfClick, \" times.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Increment By:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: incrementBy,\n      onChange: e => setIncrementBy(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setNumberofClicks(numberOfClick + incrementBy);\n      },\n      children: \"CLICK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_s(CounterButton, \"YF6jd59rA+5RN4oWggyfV/h3CfY=\");\n_c = CounterButton;\nexport default CounterButton;\nvar _c;\n$RefreshReg$(_c, \"CounterButton\");","map":{"version":3,"names":["React","useState","CounterButton","numberOfClick","setNumberofClicks","incrementBy","setIncrementBy","e","target","value"],"sources":["/Users/mymac/Desktop/GeneralAssembly/Post-Graduation-Projects/react-software-architecture-course/src/pages/CounterButton.js"],"sourcesContent":["import { React, useState } from 'react'\n\nconst CounterButton = () => {\n    const [numberOfClick, setNumberofClicks] = useState(0);\n    const[incrementBy, setIncrementBy] = useState(1);\n  return (\n    <div className='counter-button-contianer'>\n      <p>You have clicked the button {numberOfClick} times.</p>\n      <label>Increment By:\n\n\n      </label><input value={incrementBy}\n        onChange={e => setIncrementBy(e.target.value)}/>\n\n      <button onClick={()=>{\n        setNumberofClicks(numberOfClick + incrementBy);\n      }}>CLICK</button>\n    </div>\n  )\n}\n\nexport default CounterButton\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAEvC,MAAMC,aAAa,GAAG,MAAM;EAAA;EACxB,MAAM,CAACC,aAAa,EAAEC,iBAAiB,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC;EACtD,MAAK,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EAClD,oBACE;IAAK,SAAS,EAAC,0BAA0B;IAAA,wBACvC;MAAA,WAAG,8BAA4B,EAACE,aAAa,EAAC,SAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI,eACzD;MAAA,UAAO;IAGP;MAAA;MAAA;MAAA;IAAA,QAAQ;MAAO,KAAK,EAAEE,WAAY;MAChC,QAAQ,EAAEE,CAAC,IAAID,cAAc,CAACC,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eAElD;MAAQ,OAAO,EAAE,MAAI;QACnBL,iBAAiB,CAACD,aAAa,GAAGE,WAAW,CAAC;MAChD,CAAE;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACb;AAEV,CAAC;AAAA,GAjBKH,aAAa;AAAA,KAAbA,aAAa;AAmBnB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}